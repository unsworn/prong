function array2json(arr){    var parts = [];    var is_list = (Object.prototype.toString.apply(arr) === '[object Array]');    for(var key in arr) {    	var value = arr[key];        if(typeof value == "object") { //Custom handling for arrays            if(is_list) parts.push(array2json(value)); /* :RECURSION: */            else parts[key] = array2json(value); /* :RECURSION: */        } else {            var str = "";            if(!is_list) str = '"' + key + '":';            //Custom handling for multiple data types            if(typeof value == "number") str += value; //Numbers            else if(value === false) str += 'false'; //The booleans            else if(value === true) str += 'true';            else str += '"' + value + '"'; //All other things            // :TODO: Is there any more datatype we should be in the lookout for? (Functions?)            parts.push(str);        }    }    var json = parts.join(",");        if(is_list) return '[' + json + ']';//Return numerical JSON    return '{' + json + '}';//Return associative JSON}function Item(){    this.x = 0;    this.y = 0;    this.w = 0;    this.h = 0;    this.type   = undefined;    this.name = undefined;        this.clz     = undefined;    }var doc = app.activeDocument;var items = doc.pageItems;//alert(doc.cropBox);//alert(doc.name);//doc.pathItems.rectangle(0, 0, 200, 100);//alert(doc.width);//alert(doc.height);var docWidth  = doc.width;var docHeight = doc.height;var a = new Array();for (var i=0 ; i < items.length ; i++){    var item = items[i];    var note = item.note;    var bounds = item.geometricBounds;    var pW = (bounds[2] - bounds[0]);    var pH  = Math.abs(bounds[3] - bounds[1]);    var pX  = bounds[0];    var pY  = Math.abs(bounds[1]);        var rX = (pX / docWidth);    var rW = (pW / docWidth);    var rY = (pY / docHeight);    var rH = (pH / docHeight);        alert(rX + ", " + rY + ", " + rW + ", " + rH);        var oItem = new Item();        a.push(oItem);}var color = new  RGBColor();color.red = 255;var out = doc.pathItems.rectangle(0, -10, 10, 10);out.note = array2json(a);out.fillColor = color;